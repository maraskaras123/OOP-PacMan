@page "/"
@inject NavigationManager Navigation
@implements IAsyncDisposable

<PageTitle>Index</PageTitle>

<div class="form-group">
    <label>
        User:
        <input @bind="UserInput"/>
    </label>
</div>
<div class="form-group">
    <label>
        Message:
        <input @bind="MessageInput" size="50"/>
    </label>
</div>
<button @onclick="OnSend" disabled="@(HubConnection?.State != HubConnectionState.Connected)">Send</button>

<hr/>

<ul id="messagesList">
    @foreach (var message in Messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    private HubConnection? HubConnection { get; set; }
    private List<string> Messages { get; } = new();
    private string? UserInput { get; set; }
    private string? MessageInput { get; set; }

    protected override async Task OnInitializedAsync()
    {
        HubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/chathub"))
            .Build();

        HubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            Messages.Add(encodedMsg);
            StateHasChanged();
        });

        await HubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (HubConnection is not null)
        {
            await HubConnection.DisposeAsync();
        }
    }

    private async Task OnSend()
    {
        if (HubConnection is not null)
        {
            await HubConnection.SendAsync("SendMessageToAll", UserInput, MessageInput);
        }
    }

}